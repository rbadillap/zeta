{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "showcase",
  "type": "registry:block",
  "title": "Showcase",
  "author": "Ronny Badilla - @rbadillap",
  "description": "This block contains a real world example of how to use Zeta.",
  "registryDependencies": [
    "https://zeta-registry.vercel.app/r/registry-nextjs.json"
  ],
  "files": [
    {
      "path": "registry/new-york/examples/showcase/page.tsx",
      "content": "\"use client\"\n\nimport Link from \"next/link\"\nimport { Card, CardContent } from \"@/components/ui/card\"\nimport { Button } from \"@/components/ui/button\"\nimport { Countdown } from \"@/registry/new-york/ui/countdown\"\n\nexport default function Preview() {\n  return (\n    <main className=\"min-h-svh flex flex-col bg-background text-foreground\">\n      <section className=\"flex flex-col items-center justify-center px-4 py-24 w-full\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 w-full max-w-4xl items-center\">\n          <div className=\"flex flex-col gap-4\">\n            <h1 className=\"text-3xl md:text-4xl font-bold mb-2\">&lt;Countdown /&gt;</h1>\n            <p className=\"text-muted-foreground text-lg max-w-md\">\n              Use the countdown component. Perfect for launches, limited offers, \n              and time-sensitive eventsâ€”fully customizable, and minimalistic.\n            </p>\n          </div>\n          <div className=\"flex flex-row md:flex-col gap-4 justify-center md:justify-end items-center md:items-end\">\n            <Button asChild size=\"lg\" className=\"w-full md:w-auto\">\n              <Link href=\"/registry/countdown\">Get Access</Link>\n            </Button>\n            <Button size=\"lg\" variant=\"outline\" className=\"w-full md:w-auto\">\n              {/* TODO: Replace with auto-docs generated by Zeta */}\n              <a href=\"https://example.com/docs\" target=\"_blank\" rel=\"noopener noreferrer\">View Docs</a>\n            </Button>\n          </div>\n        </div>\n        <Card className=\"w-full max-w-4xl mt-12\">\n          <CardContent className=\"py-8 flex flex-col items-center justify-center\">\n            <Countdown label=\"Time left to unlock premium\" />\n          </CardContent>\n        </Card>\n      </section>\n    </main>\n  )\n} ",
      "type": "registry:page",
      "target": "app/page.tsx"
    },
    {
      "path": "registry/new-york/ui/countdown.tsx",
      "content": "import * as React from \"react\"\n\ninterface CountdownProps {\n  until?: Date | string\n  label?: string\n  className?: string\n}\n\nfunction getTimeLeft(until: Date): string {\n  const now = new Date()\n  const diff = Math.max(0, until.getTime() - now.getTime())\n  const hours = Math.floor(diff / 1000 / 60 / 60)\n  const minutes = Math.floor((diff / 1000 / 60) % 60)\n  const seconds = Math.floor((diff / 1000) % 60)\n  return [hours, minutes, seconds]\n    .map((n) => n.toString().padStart(2, \"0\"))\n    .join(\":\")\n}\n\nexport function Countdown({ until, label = \"Time left\", className }: CountdownProps) {\n  const [time, setTime] = React.useState<string>(\"\")\n\n  React.useEffect(() => {\n    let target: Date\n    if (until) {\n      target = typeof until === \"string\" ? new Date(until) : until\n    } else {\n      target = new Date(Date.now() + 60 * 60 * 1000) // 1 hour from now\n    }\n    function update() {\n      setTime(getTimeLeft(target))\n    }\n    update()\n    const interval = setInterval(() => {\n      update()\n    }, 1000)\n    return () => clearInterval(interval)\n  }, [until])\n\n  return (\n    <div className={`w-full max-w-md flex flex-col items-center justify-center py-8 ${className ?? \"\"}`.trim()}>\n      <span className=\"text-6xl font-mono font-light tracking-widest text-foreground select-none\">\n        {time}\n      </span>\n      <span className=\"mt-3 text-sm text-muted-foreground font-normal tracking-wide select-none\">\n        {label}\n      </span>\n    </div>\n  )\n} ",
      "type": "registry:component",
      "target": "components/countdown.tsx"
    }
  ]
}